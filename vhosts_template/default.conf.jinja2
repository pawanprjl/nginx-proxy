map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

proxy_cache off;
proxy_request_buffering off;

ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:!DSS';
ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
ssl_prefer_server_ciphers on;
ssl_session_timeout 5m;
ssl_session_cache shared:SSL:50m;
ssl_session_tickets off;
ssl_stapling on;
ssl_stapling_verify on;
add_header Strict-Transport-Security "max-age=31536000" always;
access_log /var/log/nginx/access.log;
client_max_body_size {{ config.client_max_body_size }};


{% for server in virtual_servers %}
    {% if server.secured %}

    server {
        listen {{ server.port }} ssl;
        http2 on;
        server_name {{ server.hostname }};
        ssl_certificate /etc/ssl/certs/{{ server.ssl_file }}.crt;
        ssl_certificate_key /etc/ssl/private/{{ server.ssl_file }}.key;

        {% for location in server.locations.values() %}
            location {{ location.name }} {

                {% for injection in location.extras.injected %}
                    {{ injection }};
                {% endfor %}

                proxy_pass {{ location.container.scheme }}://{{ location.container.address }}:{{ location.container.port }}{{ location.container.path }};

                {% if location.name != '/' %}
                    proxy_redirect $scheme://$http_host{{ location.container.path if location.container.path else '/' }} $scheme://$http_host{{ location.name }};
                {% endif %}

                {% if location.websocket %}
                    proxy_http_version 1.1;
                    proxy_set_header Host $http_host;
                    proxy_set_header Connection $connection_upgrade;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto $scheme;
                {% endif %}

            }
        {% endfor %}

    }

    {% else %}

    server {
        listen {{ server.port }};
        server_name {{ server.hostname }};

        {% for location in server.locations.values() %}
            location {{ location.name }} {
                {% for injection in location.extras.injected %}
                    {{ injection }};
                {% endfor %}

                proxy_pass {{ location.container.scheme }}://{{ location.container.address }}:{{ location.container.port }}{{ location.container.path }};

                {% if location.name != '/' %}
                    proxy_redirect $scheme://$http_host{{ location.container.path if location.container.path else '/' }} $scheme://$http_host{{ location.name }};
                {% endif %}

                {% if location.websocket %}
                    proxy_http_version 1.1;
                    proxy_set_header Host $http_host;
                    proxy_set_header Connection $connection_upgrade;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto $scheme;
                {% endif %}
            }
        {% endfor %}

        location /.well-known/acme-challenge/ {
            alias {{ config.challenge_dir }};
            try_files $uri =404;
        }
    }

    {% endif %}

    {% if server.ssl_redirect %}

        server {
            listen 80;
            server_name {{ server.hostname }};

            location /.well-known/acme-challenge/ {
                alias {{ config.challenge_dir }};
                try_files $uri =404;
            }

            location / {
                return 301 https://$host$request_uri;
            }
        }

    {% endif %}
{% endfor %}


server {
    listen 80 default_server;
    server_name _ ;

    location /.well-known/acme-challenge/ {
        alias {{ config.challenge_dir }};
        try_files $uri =404;
    }

    location / {
        return 503;
    }
}
